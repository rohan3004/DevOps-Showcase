name: CI/CD Pipeline for Docker Compose to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Install Docker Compose
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.22.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose version  # Confirm installation

    # Step 3: Log in to Docker Hub
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # Step 4: Build and push Docker images
    - name: Build and push Docker images
      run: |
        services=$(docker-compose config --services)
        for service in $services; do
          docker-compose build $service
          docker tag $service:latest ${{ secrets.DOCKER_USERNAME }}/$service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/$service:latest
        done

    # Step 5: Deploy to EC2
    - name: Deploy to EC2
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H "${{ secrets.EC2_HOST }}" >> ~/.ssh/known_hosts

        ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          # Install Docker if not already installed
          if ! command -v docker &> /dev/null; then
            sudo apt-get update -y
            sudo apt-get install -y docker.io
          fi

          # Install Docker Compose if not already installed
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.22.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          # Create a directory for the application if it doesn't exist
          mkdir -p ~/app

          # Copy docker-compose.yml to the instance
          cat > ~/app/docker-compose.yml << 'COMPOSE_FILE'
          $(cat docker-compose.yml)
          COMPOSE_FILE

          # Log in to Docker Hub
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

          # Pull the latest images and start the services
          cd ~/app
          docker-compose pull
          docker-compose up -d
        EOF
